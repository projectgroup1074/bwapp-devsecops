pipeline {
    agent any

    environment {
        SONARQUBE_URL = 'http://192.168.28.141:9000'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/projectgroup1074/bwapp-devsecops.git'
            }
        }

        stage('Build & Run Containers') {
            steps {
                dir('bwapp') {
                    // Stop if already running
                    sh 'docker compose -f docker-compose.bwapp.yml down || true'

                    // Start fresh containers
                    sh 'docker compose -f docker-compose.bwapp.yml up -d'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('MySonarQube') {
                    sh '''
                    sonar-scanner \
                      -Dsonar.projectKey=bwapp \
                      -Dsonar.sources=. \
                      -Dsonar.host.url=$SONARQUBE_URL \
                      -Dsonar.login=$sonar-token
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Security Scan (DefectDojo Placeholder)') {
            steps {
                echo "Future step: Trigger OWASP ZAP, save results, and push to DefectDojo"
            }
        }
    }
}
