pipeline {
    agent any

    environment {
        SONARQUBE_ENV = credentials('sonar-token') // Jenkins credentials ID for SonarQube
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/projectgroup1074/bwapp-devsecops.git'
            }
        }

        stage('Build & Run Containers') {
            steps {
                dir('.') { // Run docker-compose from repo root
                    sh 'docker-compose up -d'
                   
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=bwapp \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://sonarqube:9000 \
                        -Dsonar.login=${SONARQUBE_ENV}
                    """
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Security Scan (DefectDojo Placeholder)') {
            steps {
                echo 'Here we would run DefectDojo API scans...'
            }
        }
    }
}
